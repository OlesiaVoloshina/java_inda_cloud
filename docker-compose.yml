version: '2'

services:
#  eureka:
#    image: springcloud/eureka
#    ports:
#      - "8761:8761"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data:rw              # Persistence data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.2.0
    ports:
      - "25826:25826"
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro                # Pipeline configuration
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.2.0
    volumes:
      - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - ./filebeat/data:/usr/share/filebeat/data:rw                        # Persistence data
      - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
      - //var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
    user: root                                                             # Allow access to log files and docker.sock
    environment:
        COMPOSE_CONVERT_WINDOWS_PATHS: 1
    depends_on:
      - logstash

  mongo:
    image: mongo
    ports:
      - "27017:27017"

  # my service discovery
  sd:
    build: sd/
    ports:
      - '8761:8761'
      - '5010:5005'
    environment:
        EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://sd:8761/eureka/'

  # authorization server
  auth:
    build: auth/
    ports:
      - '8081:8080'
      - '5011:5005'
    links:
      - sd
      - mongo
    depends_on:
      - sd
      - mongo
    environment:
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://sd:8761/eureka/'
    labels:
        collect_logs_with_filebeat: "true"
        decode_log_event_to_json_object: "true"

  # API gateway
  apigw:
    build: apigw/
    ports:
      - '8080:8080'
      - '5012:5005'
    links:
      - sd
      - auth
    depends_on:
      - sd
      - auth
    environment:
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://sd:8761/eureka/'
      security_oauth2_client_resource_tokenInfoUri: 'http://apigw:8080/api/auth-service/oauth/check_token'
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  # product service
  pc:
    build: pc/
    ports:
      - '8083:8080'
      - '5013:5005'
    depends_on:
      - sd
      - mongo
    links:
      - sd
    environment:
      SPRING_DATA_MONGODB_HOST: mongo
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://sd:8761/eureka/'
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  pc_2:
    build: pc/
    hostname: pc_2
    ports:
      - '8085:8080'
      - '5015:5005'
    depends_on:
      - sd
      - mongo
    links:
      - sd
    environment:
      SPRING_DATA_MONGODB_HOST: mongo
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://sd:8761/eureka/'
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  # order service
  po:
    build: po/
    ports:
      - '8084:8080'
      - '5014:5005'
    links:
      - pc
      - sd
    depends_on:
      - sd
      - mongo
      - pc
      - auth
    environment:
      SPRING_DATA_MONGODB_HOST: mongo
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://sd:8761/eureka/'
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
networks:
  default:
    driver: bridge